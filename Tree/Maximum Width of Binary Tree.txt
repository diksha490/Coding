662. Maximum Width of Binary Tree

Given a binary tree, write a function to get the maximum width of the given tree. The width of a tree is the maximum width among all levels. The binary tree has the same structure as a full binary tree, but some nodes are null.

The width of one level is defined as the length between the end-nodes (the leftmost and right most non-null nodes in the level, where the null nodes between the end-nodes are also counted into the length calculation.

Example 1:

Input: 

           1
         /   \
        3     2
       / \     \  
      5   3     9 

Output: 4
Explanation: The maximum width existing in the third level with the length 4 (5,3,null,9).
Example 2:

Input: 

          1
         /  
        3    
       / \       
      5   3     

Output: 2
Explanation: The maximum width existing in the third level with the length 2 (5,3).

SOLUTION:-

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int widthOfBinaryTree(TreeNode root) {
        Queue<Pair> queue=new LinkedList<>();
        if(root!=null)
          queue.offer(new Pair(root,0));
        
        int max=0;
        while(!queue.isEmpty())
        {
          int size=queue.size();
          int start=-1;
          int end=-1;
          while(size-->0)
          {
            Pair p=queue.poll();
            if(start==-1)
              start=p.pos;
            end=p.pos;
            if(p.node.left!=null)
              queue.offer(new Pair(p.node.left,2*p.pos));
            if(p.node.right!=null)
              queue.offer(new Pair(p.node.right,2*p.pos+1));
          }
          max=Math.max(max,end-start+1);
        }
      return max;
    }
}

class Pair
{
  TreeNode node;
  int pos;
  Pair(TreeNode node,int pos)
  {
    this.node=node;
    this.pos=pos;
  }
}