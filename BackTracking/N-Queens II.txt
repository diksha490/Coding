The n-queens puzzle is the problem of placing n queens on an nÃ—n chessboard such that no two queens attack each other.

Given an integer n, return the number of distinct solutions to the n-queens puzzle.

Example:

Input: 4
Output: 2
Explanation: There are two distinct solutions to the 4-queens puzzle as shown below.
[
 [".Q..",  // Solution 1
  "...Q",
  "Q...",
  "..Q."],

 ["..Q.",  // Solution 2
  "Q...",
  "...Q",
  ".Q.."]
]

SOLUTION:-

class Solution {
    int count;
    public int totalNQueens(int n) {
      int board[][]=new int[n][n];
      solveNQ(board,n,0);
     return count;
   }
   public boolean solveNQ(int board[][],int n,int col)
   {
     if(col>=n)
     { 
       count++;
     }  
     
     for(int i=0;i<n;i++)                 
     {
       if(isSafe(board,i,col))
       {
         board[i][col]=1;
         if(solveNQ(board,n,col+1))
           return true;
         board[i][col]=0;
       }
     }
    return false; 
   }
  
   public boolean isSafe(int board[][],int row,int col)
   {
     int n=board.length;
     for(int i=0;i<col;i++)                   
       if(board[row][i]==1)
         return false;
     
    for(int i=row,j=col;i>=0 && j>=0;i--,j--)  
      if(board[i][j]==1)
        return false;
     
     for(int i=row,j=col;i<n && j>=0;i++,j--) 
      if(board[i][j]==1)
        return false; 
    return true;
     
     
   }
}