209. Minimum Size Subarray Sum

Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum â‰¥ s. If there isn't one, return 0 instead.

Example: 

Input: s = 7, nums = [2,3,1,2,4,3]
Output: 2
Explanation: the subarray [4,3] has the minimal length under the problem constraint.

SOLUTION:-

class Solution {
    public int minSubArrayLen(int s, int[] nums) {
       int n=nums.length;
       int minLength=Integer.MAX_VALUE;
       int left=0;
       int sum=0;
       for(int i=0;i<n;i++)
       {
         sum+=nums[i];
         while(sum>=s)
         {
           minLength=Math.min(minLength,i+1-left);
           sum=sum-nums[left];
           left++;
         }
       }
      return (minLength!=Integer.MAX_VALUE)?minLength:0;
    }
}