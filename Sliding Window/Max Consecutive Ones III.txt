1004. Max Consecutive Ones III

Given an array A of 0s and 1s, we may change up to K values from 0 to 1.

Return the length of the longest (contiguous) subarray that contains only 1s. 

 

Example 1:

Input: A = [1,1,1,0,0,0,1,1,1,1,0], K = 2
Output: 6
Explanation: 
[1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1.  The longest subarray is underlined.
Example 2:

Input: A = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], K = 3
Output: 10
Explanation: 
[0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]
Bolded numbers were flipped from 0 to 1.  The longest subarray is underlined.

SOLUTION:-

class Solution {
    public int longestOnes(int[] A, int K) {
       int maxValue=Integer.MIN_VALUE;
      int count=0;
      int j=0;
      
      for(int i=0;i<A.length;i++)
      {
        if(A[i]==0)
          count++;
        while(K<count && j<A.length)
        {
          if(A[j]==0)
            count--;
          j++;[]
        }
        maxValue=Math.max(maxValue,i-j+1);
      }
      return maxValue;
    }
}