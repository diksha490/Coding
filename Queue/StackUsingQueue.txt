class StackUsingQueue
{
    Queue<Integer> queue=new LinkedList<Integer>();
    public void push(int val)
    {
        queue.add(val);
        
        for(int i=0;i<queue.size()-1;i++)
        {
            int temp=queue.remove();
            queue.add(temp);
        }
    }
    
    public int pop()
    {
        if(queue.size()==0)
        {
            System.out.println("stack underflow");
            return -1;
        }
       return queue.remove();
    }
    
    public int top()
    {
        if(queue.size()==0)
        {
            System.out.println("stack underflow");
            return -1;
        }
        return queue.peek();
    }
    
    public boolean empty()
    {
        return queue.isEmpty();
    }

    public static void main(String[] args) 
       {
		StackUsingQueue s=new StackUsingQueue();
		s.push(2);
		s.push(3);
		s.push(4);
		System.out.println(s.pop());
		System.out.println(s.top());
		System.out.println(s.pop());
		System.out.println(s.pop());
		System.out.println(s.pop());
	   }
}

