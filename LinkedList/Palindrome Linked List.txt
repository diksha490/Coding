Given a singly linked list, determine if it is a palindrome.

Example 1:

Input: 1->2
Output: false
Example 2:

Input: 1->2->2->1
Output: true

SOLUTION:-
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head==null || head.next==null)
            return true;
        ListNode slow=head;
        ListNode fast=head;
        ListNode prev=null;
        while(fast!=null && fast.next!=null)
        {
            prev=slow;
            slow=slow.next;
            fast=fast.next.next;
        }
        if(fast==null)
        {
            prev.next=null;
            slow=reverse(slow);
        }
        else
        {
            prev.next=null;
            slow=reverse(slow.next);
        }
        fast=head;
        while(slow!=null && fast!=null)
        {
            if(slow.val!=fast.val)
                return false;
            slow=slow.next;
            fast=fast.next;
        }
       return true; 
    }
    public ListNode reverse(ListNode head)
    {   
    if(head==null || head.next==null)
              return head;
        ListNode prev=null;
        ListNode curr=head;
        ListNode n=null;
        
        while(curr!=null)
        {
            n=curr.next;
            curr.next=prev;
            prev=curr;
            curr=n;
        }
        head=prev;
        return head;
    }   
}  