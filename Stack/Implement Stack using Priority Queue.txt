import java.util.*;

class StackPriorityQueue
{
    PriorityQueue<StackElement> queue=new PriorityQueue<>(10,new NewComparator());
    
    int count=1;
    public void push(int val)
    {
        StackElement element=new StackElement(count++,val);
        queue.add(element);
    }
    public Integer pop()
    {
        if(queue.isEmpty())
        {
            System.out.println("stack underflow");
            return null;
        }
      return queue.poll().value;    
    }
}
class NewComparator implements Comparator<StackElement>
{
    public int compare(StackElement o1,StackElement o2)
    {
        return o2.key-o1.key;
    }
}
class StackElement
{
    int key;
    int value;
    public StackElement(int key,int value)
    {
        this.key=key;
        this.value=value;
    }
}
public class Main
{
	public static void main(String[] args) {
		StackPriorityQueue q=new StackPriorityQueue();
		 q.push(10);
        q.push(20);
        q.push(30);
        q.push(40);
        q.push(50);
        q.push(60);
        q.push(70);
        q.push(80);
        q.push(90);
        q.push(100);
        q.push(110);

        System.out.println(q.pop());
        System.out.println(q.pop());
        System.out.println(q.pop());
        System.out.println(q.pop());
        System.out.println(q.pop());
        System.out.println(q.pop());
        System.out.println(q.pop());
        System.out.println(q.pop());
        System.out.println(q.pop());
        System.out.println(q.pop());
        System.out.println(q.pop());
        System.out.println(q.pop());
	}
}