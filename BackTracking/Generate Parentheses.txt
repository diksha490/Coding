Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

For example, given n = 3, a solution set is:

[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]

SOLUTION:-
class Solution {
    public List<String> generateParenthesis(int n) {
      ArrayList<String> list=new ArrayList<>();
      helper(list,"",0,0,n);
      return list;
        
    }
    
   public void helper(ArrayList<String> list,String curr,int open,int close,int n)
   {
     if(curr.length()==2*n)
     {
       list.add(curr);
       return;
     }
     if(open<n)
       helper(list,curr+"(",open+1,close,n);
     
     if(close<open)
       helper(list,curr+")",open,close+1,n);
   }
}