(#Leetcode 90) Subsets II

Given a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: [1,2,2]
Output:
[
  [2],
  [1],
  [1,2,2],
  [2,2],
  [1,2],
  []
]

SOLUTION:-

class Solution {
    HashSet<List<Integer>> result=new HashSet<>();
    public List<List<Integer>> subsetsWithDup(int[] nums) {
      List<Integer> list=new ArrayList<>();
      //Arrays.sort(nums);
      dfs(nums,list,0);
      return new ArrayList<>(result);
    }
    
    public void dfs(int nums[],List<Integer> list,int index)
    {
      result.add(new ArrayList<>(list));
      for(int i=index;i<nums.length;i++)
      {
        list.add(nums[i]);
        dfs(nums,list,i+1);
        list.remove(list.size()-1);
      }
    }
}