Given a non negative integer number num. For every numbers i in the range 0 ≤ i ≤ num calculate the number of 1's in their binary 
representation and return them as an array.

Example 1:
Input: 2
Output: [0,1,1]

Example 2:
Input: 5
Output: [0,1,1,2,1,2]

SOLUTION:-

class Solution {
    public int[] countBits(int num) {
        int result[]=new int[num+1];
        for(int i=0;i<=num;i++)
        {
            result[i]=hammingWeight(i);
        }
        return result;
        
    }
    public int hammingWeight(int n) {
        int count=0;
        while(n!=0)
        {
            if((n&1)==1)
                count++;
            n=n>>>1;
        }
       return count; 
    }
}