23. Merge k Sorted Lists

Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.

Example:

Input:
[
  1->4->5,
  1->3->4,
  2->6
]
Output: 1->1->2->3->4->4->5->6

SOLUTION:-

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */

class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
    int n = lists.length;
    PriorityQueue<Integer> pq = new PriorityQueue<Integer>();
    for(int i=0;i<n;i++){
        ListNode curr = lists[i];
        while(curr !=null){
            pq.add(curr.val);
            curr =curr.next;
        }
    }
    
    ListNode dummy = new ListNode(-1);
    ListNode result = dummy;
    
    while(!pq.isEmpty()){
        dummy.next = new ListNode( pq.poll());
        dummy = dummy.next;
    }
    return result.next;
	}
}