207. Course Schedule

There are a total of numCourses courses you have to take, labeled from 0 to numCourses-1.

Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: [0,1]

Given the total number of courses and a list of prerequisite pairs, is it possible for you to finish all courses?

 

Example 1:

Input: numCourses = 2, prerequisites = [[1,0]]
Output: true
Explanation: There are a total of 2 courses to take. 
             To take course 1 you should have finished course 0. So it is possible.
Example 2:

Input: numCourses = 2, prerequisites = [[1,0],[0,1]]
Output: false
Explanation: There are a total of 2 courses to take. 
             To take course 1 you should have finished course 0, and to take course 0 you should
             also have finished course 1. So it is impossible.

SOLUTION:-

class Solution {
    int visited[];
    List<Integer>[] arr;
    public boolean canFinish(int numCourses, int[][] prerequisites) {
      visited=new int[numCourses];
      arr=new ArrayList[numCourses];
      for(int i=0;i<numCourses;i++)
        arr[i]=new ArrayList<>();
      
      for(int i=0;i<prerequisites.length;i++)
      {
        arr[prerequisites[i][1]].add(prerequisites[i][0]);
      }
      
      for(int i=0;i<numCourses;i++)
      {
        if(hasCycle(i))
          return false;
      }
      return true;
   }
  
   public boolean hasCycle(int u)
   {
     if(visited[u]==2)
       return false;
     if(visited[u]==1)
       return true;
     visited[u]=1;
     for(int i=0;i<arr[u].size();i++)
     {
       if(hasCycle(arr[u].get(i)))
         return true;
     }
     visited[u]=2;
     return false;
   }
}