Write a program to find the node at which the intersection of two singly linked lists begins.
(#Leetcode 160)

SOLUTION:-
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if(headA==null || headB==null)
            return null;
        int count1=0;
        int count2=0;
        ListNode temp1=headA;
        ListNode temp2=headB;
        
        while(temp1!=null)
        {
            count1++;
            temp1=temp1.next;
        }
        
        while(temp2!=null)
        {
            count2++;
            temp2=temp2.next;
        }
        
        if(count1>count2)
        {
            int diff=count1-count2;
            while(diff>0)
            {
                headA=headA.next;
                diff--;
            }
            while(headA!=headB)
            {
                headA=headA.next;
                headB=headB.next;
            }
           return headA; 
        }
        else
        {
            int diff=count2-count1;
            while(diff>0)
            {
                headB=headB.next;
                diff--;
            }
            while(headA!=headB)
            {
                headA=headA.next;
                headB=headB.next;
            }
           return headA; 
        }
    }
}