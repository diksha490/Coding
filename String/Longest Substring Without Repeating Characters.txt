Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3. 
Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring.

SOLUTION:-


class Solution {
    public int lengthOfLongestSubstring(String s) {
      if(s.length()==0)
          return 0;
      if(s.length()==1)
          return 1;
      HashSet<Character> set=new HashSet<Character>();
      int index=0;
      int temp=0;
      for(int i=0;i<s.length();i++)
      {
              if(!set.contains(s.charAt(i)))
                  set.add(s.charAt(i));
              else
              {
                 temp=Math.max(temp,set.size());
                 set.clear();
                 i=index;
                 index++;
              }
          }
        
         return Math.max(temp,set.size()); 
        
    }
}