34. Find First and Last Position of Element in Sorted Array

Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.

Your algorithm's runtime complexity must be in the order of O(log n).

If the target is not found in the array, return [-1, -1].

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]
Example 2:

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]

SOLUTION:-

class Solution {
public int[] searchRange(int[] nums, int target) {

    int []res={-1,-1};
    if(nums.length==0)
        return res;
    
    int first=find(nums,target,true);
    if(first==-1)
    return res;
    
    int last=find(nums,target,false);
    res[0]=first;
    res[1]=last;
    
    return res;
}
public int find(int []nums,int target,boolean b)
{
int low=0;
int high=nums.length-1;
int res=-1;

  while(low<=high)
  {
     int mid=(low+high)/2;
      
      if(nums[mid]==target)
        {   res=mid;   
           if(b)
             low=mid+1;
           else 
             high=mid-1;  
        }     
       else if(nums[mid]>target)  high=mid-1;
       else low=mid+1;  
   }
   return res; 
}
}