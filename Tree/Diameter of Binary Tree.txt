Given a binary tree, you need to compute the length of the diameter of the tree. The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

Example:
Given a binary tree
          1
         / \
        2   3
       / \     
      4   5    
Return 3, which is the length of the path [4,2,1,3] or [5,2,1,3].

#CODE

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int diameterOfBinaryTree(TreeNode root) {
        
        if(root==null)
            return 0;
        int lheight=findHeight(root.left);
        int rheight=findHeight(root.right);
        int ldiameter=diameterOfBinaryTree(root.left);
        int rdiameter=diameterOfBinaryTree(root.right);
        int diameterOfTree=Math.max(lheight+rheight,Math.max(ldiameter,rdiameter));
        
        return diameterOfTree;
        
    }
    public int findHeight(TreeNode root)
    {
        int leftHeight=0;
        int rightHeight=0;
        if(root==null)
            return 0;
        leftHeight=findHeight(root.left)+1;                                               rightHeight=findHeight(root.right)+1;
        
        return Math.max(leftHeight,rightHeight);
        
    }
}